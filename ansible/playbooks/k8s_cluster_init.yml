- hosts: master_node
  gather_facts: true
  become: true
  tasks:
    - name: import LAB_FQDN
      shell: |
        source ../../src/elise.sh;
        echo "${LAB_FQDN}"
      no_log: true
      delegate_to: localhost
      register: lab_fqdn

    - name: import KUBE_POD_NETWORK
      shell: |
        source ../../src/elise.sh;
        echo "${KUBE_POD_NETWORK}"
      no_log: true
      delegate_to: localhost
      register: kube_pod_network

    - name: initialize kubernetes cluster
      shell: |
        kubeadm init \
          --apiserver-advertise-address="{{ ansible_default_ipv4.address }}" \
          --pod-network-cidr="{{ kube_pod_network.stdout }}" \
          --apiserver-cert-extra-sans="{{ lab_fqdn.stdout }}"

    - name: import new kubeconfig
      shell: cat /etc/kubernetes/admin.conf
      register: kube_config

    - name: generate new kubeconfig
      shell: |
        ca=$(echo "{{ kube_config.stdout }}" | grep certificate-authority-data\: | awk '{print $2}');
        crt=$(echo "{{ kube_config.stdout }}" | grep client-certificate-data\: | awk '{print $2}');
        key=$(echo "{{ kube_config.stdout }}" | grep client-key-data\: | awk '{print $2}');
        source ../../src/general.sh;
        vars_update KUBE_CONFIG_CERTIFICATE_AUTHORITY_DATA "$ca";
        vars_update KUBE_CONFIG_CLIENT_CERTIFICATE_DATA "$crt";
        vars_update KUBE_CONFIG_CLIENT_KEY_DATA "$key";
        source ../../src/elise.sh;
        source ../../src/general.sh;
        source ../../src/kubernetes.sh;
        kube_config '/root' "{{ lab_fqdn.stdout }}"
      delegate_to: localhost
