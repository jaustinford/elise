- hosts: worker_nodes
  gather_facts: false
  become: true
  handlers:
    - name: systemctl restart cron
      systemd:
        name: cron
        state: restarted
        daemon_reload: yes

  tasks:
    - name: configure crontab - variables
      cron:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        env: yes
      with_items:
        - name: SHELL
          value: /bin/bash
        - name: PATH
          value: /sbin:/bin:/usr/sbin:/usr/bin
        - name: MAILTO
          value: root
      notify: systemctl restart cron
      when: option == "cron"

    - name: configure crontab - job
      cron:
        name: ssl_renew
        minute: '0'
        hour: '0'
        day: '1'
        month: '2,4,6,8,10,12'
        user: root
        job: docker exec -it $(docker ps | egrep -o 'k8s_acme_acme-.*$') certbot renew
      notify: systemctl restart cron
      when: option == "cron"

- hosts: localhost
  gather_facts: false
  become: true
  tasks:
    - name: generate new certificate
      shell: |
        kubectl -n eslabs exec --stdin --tty \
            "$(kubectl -n eslabs get pods | egrep -o "^acme-[0-9a-z]{1,}-[0-9a-z]{1,}")" -- \
            /bin/bash -c 'rm -rf /etc/letsencrypt/*; /tmp/certbot.sh generate'
      register: generate_new_certificate
      when: option == "generate"

    - name: display current certificate
      shell: |
        kubectl -n eslabs exec --stdin --tty \
            "$(kubectl -n eslabs get pods | egrep -o "^acme-[0-9a-z]{1,}-[0-9a-z]{1,}")" -- \
            /bin/bash -c '/tmp/certbot.sh display'
      register: display_current_certificate
      when: option == "display"

    - debug: var=display_current_certificate.stdout_lines
      when: option == "display"

    - debug: var=generate_new_certificate.stdout_lines
      when: option == "generate"
